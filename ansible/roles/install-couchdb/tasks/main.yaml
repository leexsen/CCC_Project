---
- name: Create a volume for storing couchdb data
  become: yes
  docker_volume:
    name: couchdb_volume
    recreate: always
    state: present

- name: Create a volume for storing couchdb config
  become: yes
  docker_volume:
    name: couchdb_config_volume
    recreate: always
    state: present

- name: Configure vm.args file
  template:
    src: vm.args.j2
    dest: "/tmp/vm.args"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: Configure local.ini file
  template:
    src: local.ini.j2
    dest: "/tmp/local.ini"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: Create a helper container
  become: yes
  docker_container:
    name: helper
    image: busybox
    volumes:
      - couchdb_config_volume:/data

- name: Copy couchdb config files to couchdb_config_volume
  become: yes
  shell: docker cp /tmp/vm.args helper:/data && docker cp /tmp/local.ini helper:/data && docker rm helper


- name: Create couchdb replacted service
  become: yes
  shell: docker service create \
            --replicas 3 \
            --name couchdb \
            --publish mode=host,target=5984,published=5984 \
            --publish mode=host,target=4369,published=4369 \
            --publish mode=host,target=9000,published=9000 \
            -e COUCHDB_USER=admin \
            -e COUCHDB_PASSWORD=password \
            -e COUCHDB_ARGS_FILE=/opt/couchdb/etc/local.d/vm.args \
            --mount type=volume,source=couchdb_volume,destination=/opt/couchdb/data \
            --mount type=bind,source=/etc/hosts,destination=/etc/hosts,ro=true \
            --mount type=volume,source=couchdb_config_volume,destination=/opt/couchdb/etc/local.d \
            -d couchdb
  when: ansible_hostname == manager_node_hostname

# - name: Create a container
#   become: yes
#   docker_container:
#     name: d1
#     image: lecd64/d1
#     state: started
#     pull: yes
#     env:
#       CMD: "{{ CMD }}"
#     ports:
#     - "5984:5984"

#     volumes:
#     - couchdb_volume:/opt/couchdb/data


# for node in "${nodes[@]}" 
#   do
#     docker run\
#       --name couchdb${node}\
#       -v 
#       --env COUCHDB_USER=${user}\
#       --env COUCHDB_PASSWORD=${pass}\
#       --env NOOENAME=couchdb@${node}\
#       --env COUCHDB_SECRET=${cookie}\
#       --env ERL_FLAGS="-setcookie \"${cookie}\" -name \"couchdb@${node}\""\
#       ibmcom/couchdb3:${VERSION}
# done

# sudo docker service create \
#             --replicas 3 \
#             --name couchdb \
#             --publish mode=host,target=5984,published=5984 \
#             --publish mode=host,target=4369,published=4369 \
#             --publish mode=host,target=9000,published=9000 \
#             -e COUCHDB_USER=admin \
#             -e COUCHDB_PASSWORD=password \
#             -e COUCHDB_ARGS_FILE=/opt/couchdb/etc/local.d/vm.args \
#             --mount type=volume,source=couchdb_volume,destination=/opt/couchdb/data \
#             --mount type=bind,source=/etc/hosts,destination=/etc/hosts,ro=true \
#             --mount type=volume,source=couchdb_config_volume,destination=/opt/couchdb/etc/local.d \
#             -d couchdb